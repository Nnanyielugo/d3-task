{"version":3,"sources":["draw.ts","Chart.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["svg","xAxis","yAxis","max","focus","tooltip","bisect","line","drawX","drawY","idleTimeout","brush","graphData","showTPInteraction","parentNode","WIDTH","HEIGHT","margin","create","node","data","showInteraction","d3","remove","current","append","attr","range","style","d","date","left","transition","duration","value","domain","extent","on","updateChart","selectAll","offset","color","enter","call","path","datum","x","y","pathLength","getTotalLength","ease","attrTween","join","a","b","evt","x0","invert","index","d0","d1","getTime","baseX","baseY","select","text","toLocaleString","month","day","year","timeZone","formatDate","toFixed","pageX","pageY","moveFn","leaveFn","draw","selection","move","setTimeout","idled","reinitialize","Chart","ref","React","chartType","setChartType","setShowInteraction","valueMap","Date","then","handleChangeChartType","inputType","handleChangeInteraction","id","onClick","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bfc4d5d.chunk.js","sourcesContent":["import * as d3 from 'd3';\nimport './draw.css';\nimport type { ChartData, Margin, Ref } from './interfaces';\n\nconst WIDTH = 1200;\nconst HEIGHT = 600;\n\nconst margin: Margin = {\n  top: 50,\n  right: 40,\n  bottom: 50,\n  left: 80,\n};\n\ntype D3SVGSelection = d3.Selection<SVGGElement, unknown, null, undefined>;\ninterface D3BrushEvent {\n  selection: [number, number];\n}\nlet svg: D3SVGSelection;\nlet xAxis: d3.ScaleTime<number, number, never>;\nlet yAxis: d3.ScaleLinear<number, number, never>;\nlet max: number;\nlet focus: d3.Selection<SVGCircleElement, unknown, null, undefined>;\nlet tooltip: d3.Selection<HTMLDivElement, unknown, HTMLElement, any>;\nlet tpDate: d3.Selection<HTMLDivElement, unknown, HTMLElement, any>;\nlet tpValue: d3.Selection<HTMLDivElement, unknown, HTMLElement, any>;\n// let path:\n//   | d3.Selection<SVGPathElement, ChartData[], null, undefined>\n//   | d3.Transition<SVGPathElement, ChartData[], null, undefined>;\nlet bisect: (\n  array: ArrayLike<ChartData>,\n  x: Date,\n  lo?: number | undefined,\n  hi?: number | undefined\n) => number;\nlet line: D3SVGSelection;\nlet drawX:\n  | D3SVGSelection\n  | d3.Transition<SVGGElement, unknown, null, undefined>;\nlet drawY:\n  | D3SVGSelection\n  | d3.Transition<SVGGElement, unknown, null, undefined>;\nlet idleTimeout: NodeJS.Timer | null;\nlet brush: any; // FIX ME\n\nlet graphData: ChartData[];\nlet showTPInteraction: boolean;\nlet parentNode: Ref;\n\nexport function create(node: Ref, data: ChartData[], showInteraction: boolean) {\n  cleanup();\n  graphData = data;\n  showTPInteraction = showInteraction;\n  parentNode = node;\n  svg = d3\n    .select(node.current)\n    .append('svg')\n    .attr('width', WIDTH + margin.left + margin.right)\n    .attr('height', HEIGHT + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n  xAxis = d3.scaleTime().range([0, WIDTH]);\n\n  yAxis = d3.scaleLinear().range([HEIGHT, 0]);\n\n  focus = svg\n    .append('g')\n    .append('circle')\n    .style('fill', 'grey')\n    .attr('stroke', 'black')\n    .attr('r', 4.5)\n    .style('opacity', 0);\n\n  bisect = d3.bisector((d: ChartData) => d.date).left;\n\n  tooltip = d3\n    .select('body')\n    .append('div')\n    .attr('class', 'tooltip')\n    .style('opacity', 0);\n  tpDate = tooltip.append('div').attr('class', 'tooltip-date');\n  tpValue = tooltip.append('div');\n  tpValue.append('span').attr('class', 'tooltip-value');\n\n  if (showInteraction) {\n    drawX = svg\n      .append('g')\n      .transition()\n      .duration(500)\n      .attr('transform', `translate(0, ${HEIGHT})`)\n      .attr('class', 'x-axis');\n    drawY = svg.append('g').transition().duration(500).attr('class', 'y-axis');\n  } else {\n    drawX = svg\n      .append('g')\n      .attr('transform', `translate(0, ${HEIGHT})`)\n      .attr('class', 'x-axis');\n    drawY = svg.append('g').attr('class', 'y-axis');\n  }\n\n  draw(data, showInteraction);\n}\n\nexport function cleanup() {\n  d3.select('svg').remove();\n}\n\nexport function draw(data: ChartData[], showInteraction: boolean) {\n  max = d3.max(data, (d) => +d.value) as number;\n  xAxis.domain(\n    d3.extent(data, function (d) {\n      return d.date;\n    }) as unknown as Date[]\n  );\n  yAxis.domain([0, max]);\n\n  // add a clipPath: everything outside the clip path won't be drawn\n  svg\n    .append('defs')\n    .append('svg:clipPath')\n    .attr('id', 'clip')\n    .append('svg:rect')\n    .attr('width', WIDTH)\n    .attr('height', HEIGHT)\n    .attr('x', 0)\n    .attr('y', 0);\n\n  brush = d3\n    .brushX()\n    .extent([\n      [0, 0],\n      [WIDTH, HEIGHT],\n    ]) // select entire graph area\n    .on('end', updateChart);\n\n  // set gradient\n  svg\n    .append('linearGradient')\n    .attr('id', 'line-gradient')\n    .attr('gradientUnits', 'userSpaceOnUse')\n    .attr('x1', 0)\n    .attr('y1', yAxis(0))\n    .attr('x2', 0)\n    .attr('y2', yAxis(max))\n    .selectAll('stop')\n    .data([\n      { offset: '0%', color: 'red' },\n      { offset: '100%', color: 'blue' },\n    ])\n    .enter()\n    .append('stop')\n    .attr('offset', (d) => d.offset)\n    .attr('stop-color', (d) => d.color);\n\n  line = svg.append('g').attr('clip-path', 'url(#clip)');\n\n  if (!showInteraction) {\n    drawX.transition().duration(1000).call(d3.axisBottom(xAxis));\n    drawY.transition().duration(1000).call(d3.axisLeft(yAxis));\n\n    line\n      .append('path')\n      .datum(data)\n      .transition()\n      .duration(1000)\n      .attr('fill', 'none')\n      .attr('class', 'line')\n      .attr('stroke', showInteraction ? 'url(#line-gradient)' : 'steelblue')\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round')\n      .attr('stroke-width', 1.8)\n      .attr(\n        'd',\n        d3\n          .line<ChartData>()\n          .x((d) => xAxis(d.date))\n          .y((d) => yAxis(d.value))\n      );\n  } else {\n    drawX.call(d3.axisBottom(xAxis));\n\n    drawY.call(d3.axisLeft(yAxis));\n    const path = line\n      .append('path')\n      .datum(data)\n      .attr('fill', 'none')\n      .attr('class', 'line')\n      .attr('stroke', showInteraction ? 'url(#line-gradient)' : 'steelblue')\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round')\n      .attr('stroke-width', 1.8)\n      .attr(\n        'd',\n        d3\n          .line<ChartData>()\n          .x((d) => xAxis(d.date))\n          .y((d) => yAxis(d.value))\n      );\n    const pathLength = path.node()!.getTotalLength();\n    // add transition\n    path\n      .attr('stroke-dash-offset', pathLength)\n      .attr('stroke-dasharray', pathLength)\n      .transition()\n      .duration(3500)\n      .ease(d3.easeSin)\n      .attrTween('stroke-dasharray', function () {\n        return d3.interpolate(`0,${pathLength}`, `${pathLength},${pathLength}`);\n      });\n\n    svg\n      .append('g')\n      .attr('fill', 'none')\n      .attr('pointer-events', 'all')\n      .selectAll('rect')\n      .data(d3.pairs(data))\n      .join('rect')\n      .attr('x', ([a, b]) => xAxis(a.date))\n      .attr('height', HEIGHT)\n      .attr('width', ([a, b]) => xAxis(b.date) - xAxis(a.date))\n      .on('touchmove mousemove', (evt: MouseEvent) => moveFn(evt, data))\n      .on('touchend mouseleave', leaveFn);\n  }\n  // add brushing\n  line.append('g').attr('class', 'brush').call(brush);\n}\n\nfunction moveFn(evt: MouseEvent, data: ChartData[]) {\n  const x0 = xAxis.invert(d3.pointer(evt)[0]);\n  const index = bisect(data, x0, 1);\n  const d0 = data[index - 1];\n  const d1 = data[index];\n  const d =\n    x0.getTime() - d0.date.getTime() > d1.date.getTime() - x0.getTime()\n      ? d1\n      : d0;\n  const { date, value } = d;\n\n  const baseX = xAxis(date);\n  const baseY = yAxis(value);\n\n  tooltip.style('opacity', 0.9);\n  tooltip.select('.tooltip-date').text(formatDate(date));\n  tooltip.select('.tooltip-value').text(value.toFixed(2));\n  tooltip.style('left', `${evt.pageX}px`).style('top', `${evt.pageY}px`);\n  focus.attr('cx', baseX).attr('cy', baseY).style('opacity', 1);\n}\n\nfunction leaveFn() {\n  focus.style('opacity', 0);\n  tooltip.style('opacity', 0);\n}\n\nfunction formatDate(date: Date) {\n  return date.toLocaleString('en', {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric',\n    timeZone: 'UTC',\n  });\n}\nfunction updateChart(evt: D3BrushEvent) {\n  // find selected boundaries\n  let extent = evt.selection;\n  // if no selection, back to initial coordinates\n  if (!extent) {\n    if (!idleTimeout) {\n      return (idleTimeout = setTimeout(idled, 350));\n    }\n    xAxis.domain([4, 8]);\n  } else {\n    xAxis.domain([xAxis.invert(extent[0]), xAxis.invert(extent[1])]);\n    line.select('.brush').call(brush.move, null);\n  }\n\n  drawX.transition().duration(1000).call(d3.axisBottom(xAxis));\n\n  line\n    .select('.line')\n    .transition()\n    .duration(1000)\n    .attr(\n      'd',\n      d3\n        .line()\n        .x((d: any) => xAxis(d.date))\n        .y((d: any) => yAxis(d.value)) as any\n    );\n  svg.on('dblclick', reinitialize);\n}\nfunction idled() {\n  idleTimeout = null;\n}\n\nfunction reinitialize() {\n  // xAxis.domain(d3.extent(graphData, (d) => d.date) as any);\n  // drawX.transition().call(d3.axisBottom(xAxis));\n  // line\n  //   .select('.line')\n  //   .transition()\n  //   .duration(1000)\n  //   .attr(\n  //     'd',\n  //     d3\n  //       .line()\n  //       .x((d: any) => xAxis(d.date))\n  //       .y((d: any) => yAxis(d.value)) as any\n  //   );\n  create(parentNode, graphData, showTPInteraction);\n}\n","import * as React from 'react';\nimport * as d3 from 'd3';\n\nimport type { Ref } from './interfaces';\nimport { create, cleanup, draw } from './draw';\ninterface ChartData {\n  date: Date;\n  value: number;\n}\n\nconst Chart = () => {\n  const ref: Ref = React.createRef();\n  const [chartType, setChartType] = React.useState('total_revenue');\n  const [showInteraction, setShowInteraction] = React.useState(true);\n  const valueMap = {\n    total_revenue: 'total_rev',\n    total_volume: 'total_vol',\n  };\n\n  React.useEffect(() => {\n    d3.dsv(\n      ',',\n      'https://github.com/Nnanyielugo/d3-task/blob/main/public/data/aggregated_stock_exchange.csv',\n      (d: any): ChartData => {\n        return {\n          date: new Date(d.date),\n          value:\n            chartType === 'total_revenue'\n              ? +d[valueMap.total_revenue]\n              : +d[valueMap.total_volume],\n        };\n      }\n    ).then((data: ChartData[]) => {\n      create(ref, data, showInteraction);\n    });\n  });\n\n  const handleChangeChartType = (inputType: string) => {\n    setChartType(inputType);\n  };\n\n  const handleChangeInteraction = (inputType: boolean) => {\n    setShowInteraction(inputType);\n  };\n\n  return (\n    <>\n      <div id=\"chart\" ref={ref} />\n      <button onClick={() => handleChangeChartType('total_revenue')}>\n        See total revenue\n      </button>\n      <button onClick={() => handleChangeChartType('total_volume')}>\n        See total volume\n      </button>\n      <br />\n      <br />\n      <br />\n      <button onClick={() => handleChangeInteraction(true)}>\n        Show Tooltip and animated gradient\n      </button>\n      <button onClick={() => handleChangeInteraction(false)}>\n        Show selectable dates\n      </button>\n    </>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\nimport Chart from './Chart';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\"></header> */}\n      <Chart />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}