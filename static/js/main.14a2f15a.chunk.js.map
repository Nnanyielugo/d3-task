{"version":3,"sources":["Components/d3/index.ts","Components/SplitButton.tsx","Containers/Chart.tsx","Components/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["svg","xAxis","yAxis","max","focus","tooltip","bisect","line","drawX","drawY","idleTimeout","brush","graphData","showTPInteraction","parentNode","YALabel","WIDTH","HEIGHT","margin","create","node","data","showInteraction","yAxisLabel","d3","remove","current","append","attr","range","style","d","date","left","transition","duration","value","domain","text","extent","on","updateChart","selectAll","offset","color","enter","call","path","datum","x","y","pathLength","getTotalLength","ease","attrTween","join","a","b","evt","x0","invert","index","d0","d1","getTime","baseX","baseY","select","toLocaleString","month","day","year","timeZone","formatDate","toFixed","pageX","pageY","moveFn","leaveFn","draw","selection","move","setTimeout","idled","reinitialize","SplitButton","options","handleClick","React","open","setOpen","anchorRef","selectedIndex","setSelectedIndex","handleClose","event","contains","target","ButtonGroup","variant","ref","Button","label","size","undefined","onClick","prevOpen","Icon","Popper","anchorEl","role","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","map","option","MenuItem","disabled","selected","selectedItem","handleMenuItemClick","valueMap","dataOptions","chartTypeOptions","Chart","chartType","setChartType","setShowInteraction","process","Date","then","inputType","CustomAppBar","styled","AppBar","flexGrow","backgroundColor","padding","alignItems","height","AppBarText","marginLeft","Header","Box","sx","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14a2f15a.chunk.js","sourcesContent":["import * as d3 from 'd3';\nimport './index.css';\nimport type { ChartData, Margin, Ref } from '../../interfaces';\n\nconst WIDTH = 1200;\nconst HEIGHT = 600;\n\nconst margin: Margin = {\n  top: 50,\n  right: 40,\n  bottom: 50,\n  left: 80,\n};\n\ntype D3SVGSelection = d3.Selection<SVGGElement, unknown, null, undefined>;\ninterface D3BrushEvent {\n  selection: [number, number];\n}\nlet svg: D3SVGSelection;\nlet xAxis: d3.ScaleTime<number, number, never>;\nlet yAxis: d3.ScaleLinear<number, number, never>;\nlet max: number;\nlet focus: d3.Selection<SVGCircleElement, unknown, null, undefined>;\nlet tooltip: d3.Selection<HTMLDivElement, unknown, HTMLElement, any>;\nlet tpDate: d3.Selection<HTMLDivElement, unknown, HTMLElement, any>;\nlet tpValue: d3.Selection<HTMLDivElement, unknown, HTMLElement, any>;\nlet bisect: (\n  array: ArrayLike<ChartData>,\n  x: Date,\n  lo?: number | undefined,\n  hi?: number | undefined\n) => number;\nlet line: D3SVGSelection;\nlet drawX:\n  | D3SVGSelection\n  | d3.Transition<SVGGElement, unknown, null, undefined>;\nlet drawY:\n  | D3SVGSelection\n  | d3.Transition<SVGGElement, unknown, null, undefined>;\nlet idleTimeout: NodeJS.Timer | null;\nlet brush: any; // FIX ME\n\nlet graphData: ChartData[];\nlet showTPInteraction: boolean;\nlet parentNode: Ref;\nlet YALabel: string;\n\nexport function create(\n  node: Ref,\n  data: ChartData[],\n  showInteraction: boolean,\n  yAxisLabel: string\n) {\n  cleanup();\n  graphData = data;\n  showTPInteraction = showInteraction;\n  parentNode = node;\n  YALabel = yAxisLabel;\n  svg = d3\n    .select(node.current)\n    .append('svg')\n    .attr('width', WIDTH + margin.left + margin.right)\n    .attr('height', HEIGHT + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n  xAxis = d3.scaleTime().range([0, WIDTH]);\n\n  yAxis = d3.scaleLinear().range([HEIGHT, 0]);\n\n  focus = svg\n    .append('g')\n    .append('circle')\n    .style('fill', 'grey')\n    .attr('stroke', 'black')\n    .attr('r', 4.5)\n    .style('opacity', 0);\n\n  bisect = d3.bisector((d: ChartData) => d.date).left;\n\n  tooltip = d3\n    .select('body')\n    .append('div')\n    .attr('class', 'tooltip')\n    .style('opacity', 0);\n  tpDate = tooltip.append('div').attr('class', 'tooltip-date');\n  tpValue = tooltip.append('div');\n  tpValue.append('span').attr('class', 'tooltip-value');\n\n  if (showInteraction) {\n    drawX = svg\n      .append('g')\n      .transition()\n      .duration(500)\n      .attr('transform', `translate(0, ${HEIGHT})`)\n      .attr('class', 'x-axis');\n    drawY = svg.append('g').transition().duration(500).attr('class', 'y-axis');\n  } else {\n    drawX = svg\n      .append('g')\n      .attr('transform', `translate(0, ${HEIGHT})`)\n      .attr('class', 'x-axis');\n    drawY = svg.append('g').attr('class', 'y-axis');\n  }\n\n  draw(data, showInteraction);\n}\n\nfunction cleanup() {\n  d3.select('svg').remove();\n}\n\nfunction draw(data: ChartData[], showInteraction: boolean) {\n  max = d3.max(data, (d) => +d.value) as number;\n  xAxis.domain(\n    d3.extent(data, function (d) {\n      return d.date;\n    }) as unknown as Date[]\n  );\n  yAxis.domain([0, max]);\n\n  // add a clipPath: everything outside the clip path won't be drawn\n  svg\n    .append('defs')\n    .append('svg:clipPath')\n    .attr('id', 'clip')\n    .append('svg:rect')\n    .attr('width', WIDTH)\n    .attr('height', HEIGHT)\n    .attr('x', 0)\n    .attr('y', 0);\n\n  svg\n    .append('g')\n    .append('text')\n    // .attr('transform', 'rotate(-90)')\n    .attr('y', -10)\n    .attr('x', -20)\n    .text(YALabel);\n\n  brush = d3\n    .brushX()\n    .extent([\n      [0, 0],\n      [WIDTH, HEIGHT],\n    ]) // select entire graph area\n    .on('end', updateChart);\n\n  // set gradient\n  svg\n    .append('linearGradient')\n    .attr('id', 'line-gradient')\n    .attr('gradientUnits', 'userSpaceOnUse')\n    .attr('x1', 0)\n    .attr('y1', yAxis(0))\n    .attr('x2', 0)\n    .attr('y2', yAxis(max))\n    .selectAll('stop')\n    .data([\n      { offset: '0%', color: 'red' },\n      { offset: '100%', color: 'blue' },\n    ])\n    .enter()\n    .append('stop')\n    .attr('offset', (d) => d.offset)\n    .attr('stop-color', (d) => d.color);\n\n  line = svg.append('g').attr('clip-path', 'url(#clip)');\n\n  if (!showInteraction) {\n    drawX.transition().duration(1000).call(d3.axisBottom(xAxis));\n    drawY.transition().duration(1000).call(d3.axisLeft(yAxis));\n\n    line\n      .append('path')\n      .datum(data)\n      .transition()\n      .duration(1000)\n      .attr('fill', 'none')\n      .attr('class', 'line')\n      .attr('stroke', showInteraction ? 'url(#line-gradient)' : 'steelblue')\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round')\n      .attr('stroke-width', 1.8)\n      .attr(\n        'd',\n        d3\n          .line<ChartData>()\n          .x((d) => xAxis(d.date))\n          .y((d) => yAxis(d.value))\n      );\n  } else {\n    drawX.call(d3.axisBottom(xAxis));\n\n    drawY.call(d3.axisLeft(yAxis));\n    const path = line\n      .append('path')\n      .datum(data)\n      .attr('fill', 'none')\n      .attr('class', 'line')\n      .attr('stroke', showInteraction ? 'url(#line-gradient)' : 'steelblue')\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round')\n      .attr('stroke-width', 1.8)\n      .attr(\n        'd',\n        d3\n          .line<ChartData>()\n          .x((d) => xAxis(d.date))\n          .y((d) => yAxis(d.value))\n      );\n    const pathLength = path.node()!.getTotalLength();\n    // add transition\n    path\n      .attr('stroke-dash-offset', pathLength)\n      .attr('stroke-dasharray', pathLength)\n      .transition()\n      .duration(3500)\n      .ease(d3.easeSin)\n      .attrTween('stroke-dasharray', function () {\n        return d3.interpolate(`0,${pathLength}`, `${pathLength},${pathLength}`);\n      });\n\n    svg\n      .append('g')\n      .attr('fill', 'none')\n      .attr('pointer-events', 'all')\n      .selectAll('rect')\n      .data(d3.pairs(data))\n      .join('rect')\n      .attr('x', ([a, b]) => xAxis(a.date))\n      .attr('height', HEIGHT)\n      .attr('width', ([a, b]) => xAxis(b.date) - xAxis(a.date))\n      .on('touchmove mousemove', (evt: MouseEvent) => moveFn(evt, data))\n      .on('touchend mouseleave', leaveFn);\n  }\n  // add brushing\n  line.append('g').attr('class', 'brush').call(brush);\n}\n\nfunction moveFn(evt: MouseEvent, data: ChartData[]) {\n  const x0 = xAxis.invert(d3.pointer(evt)[0]);\n  const index = bisect(data, x0, 1);\n  const d0 = data[index - 1];\n  const d1 = data[index];\n  const d =\n    x0.getTime() - d0.date.getTime() > d1.date.getTime() - x0.getTime()\n      ? d1\n      : d0;\n  const { date, value } = d;\n\n  const baseX = xAxis(date);\n  const baseY = yAxis(value);\n\n  tooltip.style('opacity', 0.9);\n  tooltip.select('.tooltip-date').text(formatDate(date));\n  tooltip.select('.tooltip-value').text(value.toFixed(2));\n  tooltip.style('left', `${evt.pageX}px`).style('top', `${evt.pageY}px`);\n  focus.attr('cx', baseX).attr('cy', baseY).style('opacity', 1);\n}\n\nfunction leaveFn() {\n  focus.style('opacity', 0);\n  tooltip.style('opacity', 0);\n}\n\nfunction formatDate(date: Date) {\n  return date.toLocaleString('en', {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric',\n    timeZone: 'UTC',\n  });\n}\nfunction updateChart(evt: D3BrushEvent) {\n  // find selected boundaries\n  let extent = evt.selection;\n  // if no selection, back to initial coordinates\n  if (!extent) {\n    if (!idleTimeout) {\n      return (idleTimeout = setTimeout(idled, 350));\n    }\n    xAxis.domain([4, 8]);\n  } else {\n    xAxis.domain([xAxis.invert(extent[0]), xAxis.invert(extent[1])]);\n    line.select('.brush').call(brush.move, null);\n  }\n\n  drawX.transition().duration(1000).call(d3.axisBottom(xAxis));\n\n  line\n    .select('.line')\n    .transition()\n    .duration(1000)\n    .attr(\n      'd',\n      d3\n        .line()\n        .x((d: any) => xAxis(d.date))\n        .y((d: any) => yAxis(d.value)) as any\n    );\n  svg.on('dblclick', reinitialize);\n}\nfunction idled() {\n  idleTimeout = null;\n}\n\nfunction reinitialize() {\n  create(parentNode, graphData, showTPInteraction, YALabel);\n}\n","import * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Icon from '@material-ui/core/Icon';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\n\nimport type { FunctionComponent } from 'react';\n\ninterface Options {\n  label: string;\n  value: string | boolean;\n}\ninterface AppProps {\n  options: Options[];\n  handleClick: (option: any) => void;\n}\nconst SplitButton: FunctionComponent<AppProps> = ({\n  options,\n  handleClick,\n}): JSX.Element => {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef<HTMLDivElement>(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const handleMenuItemClick = (index: number) => {\n    setSelectedIndex(index);\n    const selectedItem = options[index];\n    handleClick(selectedItem.value);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event: React.MouseEvent<Document, MouseEvent>) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target as Node)) {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"primary\"\n        ref={anchorRef}\n        aria-label=\"split button\"\n        style={{ margin: 10 }}\n      >\n        <Button>{options[selectedIndex].label}</Button>\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          aria-controls={open ? 'split-button-menu' : undefined}\n          aria-expanded={open ? 'true' : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n        >\n          <Icon>expand_more</Icon>\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\">\n                  {options.map((option, index) => (\n                    <MenuItem\n                      key={option.label}\n                      disabled={index === 2}\n                      selected={index === selectedIndex}\n                      onClick={() => handleMenuItemClick(index)}\n                    >\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n};\n\nexport default SplitButton;\n","import * as React from 'react';\nimport * as d3 from 'd3';\n\nimport { create } from '../Components/d3';\nimport SplitButton from '../Components/SplitButton';\n\nimport type { Ref } from '../interfaces';\ninterface ChartData {\n  date: Date;\n  value: number;\n}\n\nconst valueMap = {\n  total_revenue: 'total_rev',\n  total_volume: 'total_vol',\n};\n\nconst dataOptions = [\n  { label: 'Total Revenue', value: 'total_revenue' },\n  { label: 'Total Volume', value: 'total_volume' },\n];\nconst chartTypeOptions = [\n  { label: 'Tooltip and Animated Gradient', value: true },\n  { label: 'Selectable Dates', value: false },\n];\n\ntype ChartType = 'total_revenue' | 'total_volume';\n\nconst Chart = () => {\n  const ref: Ref = React.createRef();\n  const [chartType, setChartType] = React.useState<ChartType>('total_revenue');\n  const [showInteraction, setShowInteraction] = React.useState(true);\n\n  React.useEffect(() => {\n    d3.dsv(\n      ',',\n      `${process.env.PUBLIC_URL}/data/aggregated_stock_exchange.csv`,\n      (d: any): ChartData => {\n        return {\n          date: new Date(d.date),\n          value:\n            chartType === 'total_revenue'\n              ? +d[valueMap.total_revenue]\n              : +d[valueMap.total_volume],\n        };\n      }\n    ).then((data: ChartData[]) => {\n      create(\n        ref,\n        data,\n        showInteraction,\n        chartType === 'total_revenue' ? '$' : 'N'\n      );\n    });\n  });\n\n  const handleChangeChartType = (inputType: ChartType) => {\n    setChartType(inputType);\n  };\n\n  const handleChangeInteraction = (inputType: boolean) => {\n    setShowInteraction(inputType);\n  };\n\n  return (\n    <>\n      <div id=\"chart\" ref={ref} />\n      <SplitButton handleClick={handleChangeChartType} options={dataOptions} />\n      <SplitButton\n        handleClick={handleChangeInteraction}\n        options={chartTypeOptions}\n      />\n    </>\n  );\n};\n\nexport default Chart;\n","import * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/Toolbar';\nimport { styled } from '@material-ui/core/styles';\n\nconst CustomAppBar = styled(AppBar)({\n  flexGrow: 1,\n  backgroundColor: 'whitesmoke',\n  margin: 0,\n  padding: 0,\n  alignItems: 'flex-start',\n  height: 10,\n});\n\nconst AppBarText = styled('h3')({\n  marginLeft: 80,\n});\n\nexport default function Header() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <CustomAppBar>\n        <AppBarText>Syrup Tech Screener</AppBarText>\n      </CustomAppBar>\n    </Box>\n  );\n}\n","import React from 'react';\nimport Chart from './Containers/Chart';\nimport Header from './Components/Header';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Chart />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}